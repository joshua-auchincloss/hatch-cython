name: test

on:
    push:
        branches: [v*]
    pull_request:
        branches: [v*]

concurrency:
    group: test-${{ github.head_ref }}
    cancel-in-progress: true

env:
    PYTHONUNBUFFERED: '1'
    FORCE_COLOR: '1'

jobs:
    run:
        name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-version: ['3.8', '3.9', '3.10', '3.11']

        steps:
        -   uses: actions/checkout@v3

        -   name: Install llvm
            if: startsWith(matrix.os, 'macos-')
            run: |
                brew cleanup
                brew update -f
                rm -rf /usr/local/bin/2to3*
                rm -rf /usr/local/bin/idle3*
                rm -rf /usr/local/bin/pydoc3*
                rm -rf /usr/local/bin/python*
                brew install libomp
                brew install llvm
                echo "
                export PATH=\"/usr/local/opt/llvm/bin:\$PATH\"
                export LDFLAGS=\"-L/usr/local/opt/llvm/lib\"
                export CPPFLAGS=\"-I/usr/local/opt/llvm/include\"
                export LD=ld.lld
                export AR=llvm-ar
                export RANLIB=llvm-ranlib
                " >> $HOME/.bash_profile

        -   uses: hecrj/setup-rust-action@v2
            with:
                rust-version: stable

        -   uses: cargo-bins/cargo-binstall@main

        -   name: Install jaq
            run: |
                cargo binstall -y jaq

        -   name: Set up Python ${{ matrix.python-version }}
            uses: actions/setup-python@v4
            with:
                architecture: x64
                python-version: ${{ matrix.python-version }}

        -   name: Install Hatch
            run: pip install --upgrade hatch

        -   name: Run tests
            run: hatch run cov

        -   name: Test src lib compilation
            shell: bash
            run: |
                cd test_libraries/src_structure
                echo "os: $RUNNER_OS"
                hatch --verbose build --clean
                hatch run test
                if [ "$(cat ./caller_outputs.json |  jaq .call)" -ne "true" ]; then exit 1; fi
                if [ "$(cat ./caller_outputs.json |  jaq .includes)" -ne "true" ]; then exit 1; fi

        -   name: Test simple lib compilation
            shell: bash
            run: |
                cd test_libraries/simple_structure
                echo "os: $RUNNER_OS"
                cp -r ../src_structure/src/example_lib/* ./example_lib/
                cp -r ../src_structure/tests/* ./tests/
                rm ./tests/test_custom_includes.py
                rm ./example_lib/custom_includes.*
                hatch --verbose build --clean
                hatch run test
