name: build

on:
    push:
        tags:
        -   v*
        branches:
        -   main

permissions:
    contents: write

concurrency:
    group: ${{ github.workflow }}-${{  github.sha }}
    cancel-in-progress: true

defaults:
    run:
        shell: bash

jobs:
    validate:
        name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

        steps:
        -   uses: actions/checkout@v3

        -   uses: actions/setup-go@v5
            with:
                go-version: stable

        -   name: Install Task
            run: |
                go install github.com/go-task/task/v3/cmd/task@latest

        -   name: Install llvm
            if: startsWith(matrix.os, 'macos-')
            run: |
                brew cleanup
                brew update -f
                rm -rf /usr/local/bin/2to3*
                rm -rf /usr/local/bin/idle3*
                rm -rf /usr/local/bin/pydoc3*
                rm -rf /usr/local/bin/python*
                brew install libomp
                brew install llvm
                echo "
                export PATH=\"/usr/local/opt/llvm/bin:\$PATH\"
                export LDFLAGS=\"-L/usr/local/opt/llvm/lib\"
                export CPPFLAGS=\"-I/usr/local/opt/llvm/include\"
                export LD=ld.lld
                export AR=llvm-ar
                export RANLIB=llvm-ranlib
                " >> $HOME/.bash_profile

        -   uses: hecrj/setup-rust-action@v2
            with:
                rust-version: stable

        -   uses: cargo-bins/cargo-binstall@main

        -   name: Install jaq
            run: |
                cargo binstall -y jaq

        -   name: Set up Python ${{ matrix.python-version }}
            uses: actions/setup-python@v4
            with:
                architecture: x64
                python-version: ${{ matrix.python-version }}

        -   name: Install Hatch
            run: pip install --upgrade hatch

        -   name: Run tests
            run: hatch run cov

        -   name: Test src lib compilation
            shell: bash
            run: |
                task example

        -   name: Test simple lib compilation
            shell: bash
            run: |
                task simple-structure

    sdist:
        needs: [validate]
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v3
        -   name: Set up Python
            uses: actions/setup-python@v4
        -   name: Install dependencies
            run: |
                python -m pip install --upgrade pip
                pip install hatch
        -   name: Build package
            run: hatch build -t sdist
        -   name: Upload sdist
            uses: actions/upload-artifact@v3
            with:
                name: hatch-cython.tar.gz
                path: ./dist/*.tar.gz

    wheel:
        needs: [validate]
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
                os: [ubuntu-latest, windows-latest, macos-latest]
        steps:
        -   uses: actions/checkout@v3
        -   name: Set up Python ${{ matrix.python-version }}
            uses: actions/setup-python@v4
            with:
                architecture: x64
                python-version: ${{ matrix.python-version }}
        -   name: Install dependencies
            run: |
                python -m pip install --upgrade pip
                pip install hatch
        -   name: Build package
            run: hatch build -t wheel
        -   name: Upload wheel
            uses: actions/upload-artifact@v3
            with:
                name: hatch-cython-${{ matrix.python-version }}-${{ matrix.os }}.whl
                path: ./dist/*.whl

    release:
        needs: [sdist, wheel]
        runs-on: ubuntu-latest
        if: startsWith(github.ref, 'refs/tags/')
        environment:
            name: pypi
            url: https://pypi.org/p/hatch-cython
        steps:
        -   name: Download all workflow run artifacts
            uses: actions/download-artifact@v3
            with:
                path: ./dist
        -   name: Publish package
            uses: pypa/gh-action-pypi-publish@release/v1

    gh-release:
        needs: [sdist, wheel]
        runs-on: ubuntu-latest
        if: startsWith(github.ref, 'refs/tags/')
        steps:
        -   name: Download all workflow run artifacts
            uses: actions/download-artifact@v3
            with:
                path: ./dist
        -   name: Release
            uses: softprops/action-gh-release@v1
            with:
                generate_release_notes: true
                fail_on_unmatched_files: true
                files: |
                    ./dist/*
